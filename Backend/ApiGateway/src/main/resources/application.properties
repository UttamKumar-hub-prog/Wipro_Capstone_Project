spring.application.name=ApiGateway

 
server.port=8765

spring.config.import=optional:configserver:http://localhost:9099
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost

spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true

eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

 # ==============================
# User Authentication Service (Public)
# ==============================
spring.cloud.gateway.server.webflux.routes[0].id=userauth-service-route
spring.cloud.gateway.server.webflux.routes[0].uri=lb://USER-AUTHENTICATION-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/auth/**

# ==============================
# Customer Service (ADMIN only)
# ==============================
spring.cloud.gateway.server.webflux.routes[1].id=customer-service-route
spring.cloud.gateway.server.webflux.routes[1].uri=lb://CUSTOMER-SERVICE
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/customers/**

# ==============================
# Payment Service (USER only)
# ==============================
spring.cloud.gateway.server.webflux.routes[2].id=payment-service-route
spring.cloud.gateway.server.webflux.routes[2].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/payments/**

# ==============================
# Account Service (ADMIN only)
# ==============================
spring.cloud.gateway.server.webflux.routes[3].id=account-service-route
spring.cloud.gateway.server.webflux.routes[3].uri=lb://ACCOUNT-SERVICE
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/accounts/**

# ==============================
# Notification Service (ADMIN only)
# ==============================
spring.cloud.gateway.server.webflux.routes[4].id=notification-service-route
spring.cloud.gateway.server.webflux.routes[4].uri=lb://NOTIFICATION-SERVICE
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/notifications/**

# ==============================
# Audit Service (ADMIN only)
# ==============================
spring.cloud.gateway.server.webflux.routes[5].id=audit-service-route
spring.cloud.gateway.server.webflux.routes[5].uri=lb://AUDIT-SERVICE
spring.cloud.gateway.server.webflux.routes[5].predicates[0]=Path=/audits/**

# ==============================
# Optional: Actuator (Public)
# ==============================
spring.cloud.gateway.server.webflux.routes[6].id=actuator-route
spring.cloud.gateway.server.webflux.routes[6].uri=lb://API-GATEWAY
spring.cloud.gateway.server.webflux.routes[6].predicates[0]=Path=/actuator/**

 
# ==============================
# Audit Service (ADMIN only)
# ==============================
spring.cloud.gateway.server.webflux.routes[7].id=feedback-service-route
spring.cloud.gateway.server.webflux.routes[7].uri=lb://FEEDBACK-SERVICE
spring.cloud.gateway.server.webflux.routes[7].predicates[0]=Path=/feedbacks/**

# Disable default route configuration as we're using a custom configuration
spring.cloud.gateway.server.webflux.discovery.locator.enabled=false



# Enable Micrometer tracing
management.tracing.enabled=true

 management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
# Log pattern to include traceId and spanId from MDC
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg [%X{traceId} %X{spanId}]%n

#Makes the /actuator/health endpoint accessible over HTTP.
 #Always show detailed info in /actuator/health instead of just saying "status": "UP".
management.endpoint.health.show-details=always
management.endpoint.prometheus.access=unrestricted           

# Sample rate (percentage of traces to send)
 
# Optional: Export metrics to Prometheus
 management.endpoints.web.exposure.include=*
 
 

# JWT Configuration
jwt.secret=26c4cbf903245338881de345222de9e59082fbfd9fd4dd1b198dd734a53d89d0



# ---------------------------
# Actuator Endpoints
# ---------------------------
 
management.endpoint.prometheus.enabled=true
 
management.endpoint.metrics.enabled=true

# ---------------------------
# Prometheus
# ---------------------------
# No extra config needed, Micrometer handles /actuator/prometheus

# ---------------------------
# Zipkin & Brave Tracing
# ---------------------------
# URL of the Zipkin server
spring.zipkin.base-url=http://localhost:9411
# Sample rate (1.0 = 100%)
spring.sleuth.sampler.probability=1.0

# ---------------------------
# Logging
# ---------------------------
logging.level.org.springframework.web=INFO
logging.level.io.micrometer=INFO
logging.level.brave=INFO

# ---------------------------
# OpenAPI / Swagger UI
# ---------------------------
 
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
